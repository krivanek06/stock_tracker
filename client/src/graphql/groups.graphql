fragment STGroupUserFragment on STGroupUser {
	id
	nickName
	locale
	photoURL
	accountCreatedDate
	portfolio {
		...STPortfolioWrapperFragment
	}
	startedPortfolio {
		...STPortfolioSnapshotStartedFragment
	}
	previousPosition
	currentPosition
	sinceDate
}

fragment STGroupIdentificationData on STGroupAllData {
	id
	name
	description
	imagePath
	imageUrl
	owner {
		...STGroupUserFragment
	}
	startDate
	endDate
	isInfinite
	isPrivate
	numberOfMembers
	numberOfInvitationSent
	numberOfInvitationReceived
	portfolio {
		...STPortfolioWrapperFragment
	}
	startedPortfolio {
		...STPortfolioSnapshotStartedFragment
	}
	topMembers {
		...STGroupUserFragment
	}
	lastUpdateDate
	lastEditedDate
	createdDate
	currentAchievedRanks {
		...STRankFragment
	}
}
fragment STGroupAllDataFragment on STGroupAllData {
	id
	name
	description
	imageUrl
	imagePath
	owner {
		...STGroupUserFragment
	}
	lastUpdateDate
	lastEditedDate
	createdDate
	startDate
	endDate
	isPrivate
	isInfinite
	numberOfMembers
	numberOfInvitationSent
	numberOfInvitationReceived
	portfolio {
		...STPortfolioWrapperFragment
	}
	startedPortfolio {
		...STPortfolioSnapshotStartedFragment
	}
	lastTransactions {
		...STTransactionFragmentWithUser
	}
	groupMemberData {
		id
		members {
			...STGroupUserFragment
		}
		holdings {
			holding {
				...STHoldingFragment
			}
			numberOfUsers
		}
		invitationSent {
			...STGroupUserFragment
		}
		invitationReceived {
			...STGroupUserFragment
		}
	}
	currentAchievedRanks {
		...STRankFragment
	}
	topTransactions {
		...STTransactionFragmentWithUser
	}
	groupHistoricalData {
		portfolioSnapshots {
			...STPortfolioSnapshotFragment
		}
		transactionSnapshots {
			...STTransactionSnapshotFragment
		}
		bestAchievedRanks {
			...STRankFragment
		}
		groupLogs {
			...STLogsFragment
		}
	}
	managers {
		...STGroupUserFragment
	}
}

# --------------------------------------
# QUERY

query QuerySTGroupByGroupId($id: String!) {
	querySTGroupByGroupId(id: $id) {
		...STGroupAllDataFragment
	}
}

query QuerySTGroupByGroupName($groupName: String!) {
	querySTGroupByGroupName(groupName: $groupName) {
		...STGroupIdentificationData
	}
}

# --------------------------------------
# MUTATION

mutation CreateGroup($groupInput: STGroupAllDataInput!) {
	createGroup(groupInput: $groupInput) {
		...STGroupIdentificationData
	}
}

mutation EditGroup($groupInput: STGroupAllDataInput!) {
	editGroup(groupInput: $groupInput) {
		...STGroupIdentificationData
	}
}

mutation DeleteGroup($id: String!) {
	deleteGroup(id: $id)
}

mutation ToggleInvitationRequestToGroup($id: String!, $sendInvitation: Boolean!) {
	toggleInvitationRequestToGroup(id: $id, sendInvitation: $sendInvitation) {
		...STGroupIdentificationData
	}
}

mutation AnswerReceivedGroupInvitation($id: String!, $accept: Boolean!) {
	answerReceivedGroupInvitation(id: $id, accept: $accept) {
		...STGroupIdentificationData
	}
}

mutation LeaveGroup($id: String!) {
	leaveGroup(id: $id)
}

mutation RemoveMemberFromGroup($groupId: String!, $removingUserId: String!) {
	removeMemberFromGroup(groupId: $groupId, removingUserId: $removingUserId)
}

mutation ToggleInviteUserIntoGroup($inviteUser: Boolean!, $userId: String!, $groupId: String!) {
	toggleInviteUserIntoGroup(inviteUser: $inviteUser, userId: $userId, groupId: $groupId) {
		...STGroupUserFragment
	}
}

mutation ToggleUsersInvitationRequestToGroup($acceptUser: Boolean!, $userId: String!, $groupId: String!) {
	toggleUsersInvitationRequestToGroup(acceptUser: $acceptUser, userId: $userId, groupId: $groupId) {
		...STGroupUserFragment
	}
}
